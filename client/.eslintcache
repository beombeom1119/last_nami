[{"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\완료 셋\\hellohello-main\\client\\src\\index.js":"1","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\완료 셋\\hellohello-main\\client\\src\\App.js":"2","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\완료 셋\\hellohello-main\\client\\src\\reportWebVitals.js":"3","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\완료 셋\\hellohello-main\\client\\src\\components\\Login.js":"4","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\완료 셋\\hellohello-main\\client\\src\\components\\Predict.js":"5","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\완료 셋\\hellohello-main\\client\\src\\components\\Qrcodecl.js":"6","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\완료 셋\\hellohello-main\\client\\src\\components\\layout\\Header.js":"7","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\완료 셋\\hellohello-main\\client\\src\\components\\Hair-predict.jsx":"8"},{"size":500,"mtime":1633873414000,"results":"9","hashOfConfig":"10"},{"size":703,"mtime":1633873414000,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1633873414000,"results":"12","hashOfConfig":"10"},{"size":4135,"mtime":1633957286233,"results":"13","hashOfConfig":"10"},{"size":5869,"mtime":1633954254134,"results":"14","hashOfConfig":"10"},{"size":923,"mtime":1633873414000,"results":"15","hashOfConfig":"10"},{"size":1075,"mtime":1633873414000,"results":"16","hashOfConfig":"10"},{"size":2460,"mtime":1633873414000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"98pw3d",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\완료 셋\\hellohello-main\\client\\src\\index.js",[],["37","38"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\완료 셋\\hellohello-main\\client\\src\\App.js",["39","40"],"import React,{Component} from 'react';\nimport './App.css';\nimport Login from './components/Login';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { BrowserRouter, Route, Switch, Link  } from 'react-router-dom';\nimport Predict from './components/Predict';\nimport Qrcodecl from './components/Qrcodecl';\n\nclass App extends Component{\n  render()\n   {\n    const {classes} =this.props;\n    return(\n      <>\n     <div>\n     </div>\n    <BrowserRouter>\n    <Switch>\n    <Route exact path=\"/\" component={Login}/>\n     <Route path=\"/predict\" component={Predict}/>\n     <Route path=\"/qrcodecl\" component={Qrcodecl}/>\n    </Switch>\n  </BrowserRouter>\n  <div>\n     </div>\n      </>\n    );\n  }\n}\nexport default App;\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\완료 셋\\hellohello-main\\client\\src\\reportWebVitals.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\완료 셋\\hellohello-main\\client\\src\\components\\Login.js",["41","42","43"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\완료 셋\\hellohello-main\\client\\src\\components\\Predict.js",["44","45"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\완료 셋\\hellohello-main\\client\\src\\components\\Qrcodecl.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\완료 셋\\hellohello-main\\client\\src\\components\\layout\\Header.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\완료 셋\\hellohello-main\\client\\src\\components\\Hair-predict.jsx",["46","47","48"],"import React, { useState, useEffect } from 'react'\nimport * as tmImage from '@teachablemachine/image'\n\nexport default function WelcomePage({GetTeachValue}) {\n  const [openVal, setOpenVal] = useState(false);\n  const [state, setstate] = useState({\n    iswebcam : false,\n  })\n  // const URL = \"https://teachablemachine.withgoogle.com/models/pg97lEWuB/\"  //원래\n  const URL = \"https://teachablemachine.withgoogle.com/models/ukHIXusf5/\" //4개 분류\n  let model;\n  let webcam;\n  let labelContainer;\n  let maxPredictions;\n  useEffect(() => {\n    init()\n  }, [])\n\n  async function init() {\n    const modelURL = URL + \"model.json\";\n    const metadataURL = URL + \"metadata.json\";\n    model = await tmImage.load(modelURL, metadataURL);\n    maxPredictions = model.getTotalClasses();\n    const flip = true; \n    webcam = new tmImage.Webcam(500, 500, flip); \n    await webcam.setup();\n    await webcam.play();\n    window.requestAnimationFrame(loop);\n    webcam.canvas.id=\"WebCam\"\n    document.getElementById(\"webcam-container\").appendChild(webcam.canvas);\n    labelContainer = document.getElementById(\"label-container\");\n    for (let i = 0; i < maxPredictions; i++) { \n      labelContainer.appendChild(document.createElement(\"div\"));\n    }\n  }\n\n  async function loop() {\n    webcam.update();\n    await predict();\n    window.requestAnimationFrame(loop);\n  }\n\n  async function predict() {\n    const prediction = await model.predict(webcam.canvas);\n    setstate({\n      high : prediction[0].probability.toFixed(2),\n      middle : prediction[1].probability.toFixed(2),\n      low : prediction[2].probability.toFixed(2),\n      good : prediction[3].probability.toFixed(2),\n    })\n    function SetTeachValue(){\n      GetTeachValue(prediction[0].probability.toFixed(2),prediction[1].probability.toFixed(2),prediction[2].probability.toFixed(2),prediction[3].probability.toFixed(2))\n    }\n    SetTeachValue()\n    if (prediction[0].probability.toFixed(2) >= 0.7) {\n      setOpenVal(true);\n    } else {\n      setOpenVal(false);\n    }\n    \n  }\n\n\n  return (\n    <div>\n      \n      <div id=\"webcam-container\"></div>\n      <div id=\"label-container\">{/* <h3>탈모일 확률 : {state.result1} <br></br> 정상일 확률 : {state.result2}</h3> */}</div>\n      <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js\"></script>\n      <script src=\"https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8/dist/teachablemachine-image.min.js\"></script>\n    </div>\n  )\n}",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":5,"column":40,"nodeType":"55","messageId":"56","endLine":5,"endColumn":44},{"ruleId":"53","severity":1,"message":"57","line":12,"column":12,"nodeType":"55","messageId":"56","endLine":12,"endColumn":19},{"ruleId":"58","severity":1,"message":"59","line":37,"column":29,"nodeType":"60","messageId":"61","endLine":37,"endColumn":31},{"ruleId":"62","severity":1,"message":"63","line":66,"column":9,"nodeType":"64","endLine":66,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":109,"column":78,"nodeType":"67","endLine":109,"endColumn":91},{"ruleId":"58","severity":1,"message":"59","line":72,"column":27,"nodeType":"60","messageId":"61","endLine":72,"endColumn":29},{"ruleId":"58","severity":1,"message":"68","line":72,"column":39,"nodeType":"60","messageId":"61","endLine":72,"endColumn":41},{"ruleId":"53","severity":1,"message":"69","line":5,"column":10,"nodeType":"55","messageId":"56","endLine":5,"endColumn":17},{"ruleId":"53","severity":1,"message":"70","line":6,"column":10,"nodeType":"55","messageId":"56","endLine":6,"endColumn":15},{"ruleId":"71","severity":1,"message":"72","line":17,"column":6,"nodeType":"73","endLine":17,"endColumn":8,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Expected '===' and instead saw '=='.","'openVal' is assigned a value but never used.","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [init]",{"range":"80","text":"81"},[545,547],"[init]"]